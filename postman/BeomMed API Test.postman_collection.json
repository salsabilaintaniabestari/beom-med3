{
	"info": {
		"_postman_id": "beommed-api-test-collection",
		"name": "BeomMed API Test Collection",
		"description": "Collection untuk testing API BeomMed - Sistem Pengingat Obat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('user');",
									"    pm.expect(jsonData.user).to.have.property('uid');",
									"    pm.environment.set('userId', jsonData.user.uid);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{testEmail}}\",\n    \"password\": \"{{testPassword}}\",\n    \"name\": \"{{testName}}\",\n    \"role\": \"{{testRole}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "register"]
						}
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('accessToken');",
									"    pm.environment.set('accessToken', jsonData.accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{testEmail}}\",\n    \"password\": \"{{testPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "login"]
						}
					}
				},
				{
					"name": "Get Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('user');",
									"    pm.expect(jsonData.user).to.have.property('id');",
									"    pm.expect(jsonData.user).to.have.property('role');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/me",
							"host": ["{{baseUrl}}"],
							"path": ["auth", "me"]
						}
					}
				}
			]
		},
		{
			"name": "Patients Management",
			"item": [
				{
					"name": "Get All Patients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has patients array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('patients');",
									"    pm.expect(jsonData.patients).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients",
							"host": ["{{baseUrl}}"],
							"path": ["patients"]
						}
					}
				},
				{
					"name": "Create New Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has patient data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('patient');",
									"    pm.expect(jsonData.patient).to.have.property('id');",
									"    pm.environment.set('patientId', jsonData.patient.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{patientName}}\",\n    \"age\": {{patientAge}},\n    \"gender\": \"{{patientGender}}\",\n    \"email\": \"{{patientEmail}}\",\n    \"phone\": \"{{patientPhone}}\",\n    \"condition\": \"{{patientCondition}}\",\n    \"doctorId\": \"{{doctorId}}\",\n    \"allergies\": {{patientAllergies}},\n    \"emergencyContact\": \"{{patientEmergencyContact}}\",\n    \"address\": \"{{patientAddress}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients",
							"host": ["{{baseUrl}}"],
							"path": ["patients"]
						}
					}
				},
				{
					"name": "Get Patient by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has patient data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('patient');",
									"    pm.expect(jsonData.patient).to.have.property('id');",
									"    pm.expect(jsonData.patient.id).to.eql(pm.environment.get('patientId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/{{patientId}}",
							"host": ["{{baseUrl}}"],
							"path": ["patients", "{{patientId}}"]
						}
					}
				},
				{
					"name": "Update Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated patient data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('patient');",
									"    pm.expect(jsonData.patient.name).to.eql(pm.environment.get('updatedPatientName'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{updatedPatientName}}\",\n    \"age\": {{updatedPatientAge}},\n    \"gender\": \"{{updatedPatientGender}}\",\n    \"email\": \"{{updatedPatientEmail}}\",\n    \"phone\": \"{{updatedPatientPhone}}\",\n    \"condition\": \"{{updatedPatientCondition}}\",\n    \"allergies\": {{updatedPatientAllergies}},\n    \"emergencyContact\": \"{{updatedPatientEmergencyContact}}\",\n    \"address\": \"{{updatedPatientAddress}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/patients/{{patientId}}",
							"host": ["{{baseUrl}}"],
							"path": ["patients", "{{patientId}}"]
						}
					}
				},
				{
					"name": "Delete Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response confirms deletion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData.message).to.include('deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/{{patientId}}",
							"host": ["{{baseUrl}}"],
							"path": ["patients", "{{patientId}}"]
						}
					}
				}
			]
		},
		{
			"name": "Doctors Management",
			"item": [
				{
					"name": "Get All Doctors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has doctors array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('doctors');",
									"    pm.expect(jsonData.doctors).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/doctors",
							"host": ["{{baseUrl}}"],
							"path": ["doctors"]
						}
					}
				},
				{
					"name": "Create New Doctor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has doctor data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('doctor');",
									"    pm.expect(jsonData.doctor).to.have.property('id');",
									"    pm.environment.set('doctorId', jsonData.doctor.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{doctorName}}\",\n    \"email\": \"{{doctorEmail}}\",\n    \"password\": \"{{doctorPassword}}\",\n    \"specialization\": \"{{doctorSpecialization}}\",\n    \"sip\": \"{{doctorSip}}\",\n    \"phone\": \"{{doctorPhone}}\",\n    \"address\": \"{{doctorAddress}}\",\n    \"hospital\": \"{{doctorHospital}}\",\n    \"experience\": {{doctorExperience}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/doctors",
							"host": ["{{baseUrl}}"],
							"path": ["doctors"]
						}
					}
				},
				{
					"name": "Update Doctor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated doctor data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('doctor');",
									"    pm.expect(jsonData.doctor.specialization).to.eql(pm.environment.get('updatedDoctorSpecialization'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{updatedDoctorName}}\",\n    \"specialization\": \"{{updatedDoctorSpecialization}}\",\n    \"sip\": \"{{updatedDoctorSip}}\",\n    \"phone\": \"{{updatedDoctorPhone}}\",\n    \"address\": \"{{updatedDoctorAddress}}\",\n    \"hospital\": \"{{updatedDoctorHospital}}\",\n    \"experience\": {{updatedDoctorExperience}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/doctors/{{doctorId}}",
							"host": ["{{baseUrl}}"],
							"path": ["doctors", "{{doctorId}}"]
						}
					}
				}
			]
		},
		{
			"name": "Medication Schedules",
			"item": [
				{
					"name": "Get All Medication Schedules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has schedules array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('schedules');",
									"    pm.expect(jsonData.schedules).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medication-schedules",
							"host": ["{{baseUrl}}"],
							"path": ["medication-schedules"]
						}
					}
				},
				{
					"name": "Create Medication Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has schedule data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('schedule');",
									"    pm.expect(jsonData.schedule).to.have.property('id');",
									"    pm.environment.set('scheduleId', jsonData.schedule.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientId\": \"{{patientId}}\",\n    \"medicationName\": \"{{medicationName}}\",\n    \"dosage\": \"{{medicationDosage}}\",\n    \"frequency\": \"{{medicationFrequency}}\",\n    \"times\": {{medicationTimes}},\n    \"startDate\": \"{{scheduleStartDate}}\",\n    \"endDate\": \"{{scheduleEndDate}}\",\n    \"instructions\": \"{{medicationInstructions}}\",\n    \"notes\": \"{{medicationNotes}}\",\n    \"isActive\": {{scheduleIsActive}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/medication-schedules",
							"host": ["{{baseUrl}}"],
							"path": ["medication-schedules"]
						}
					}
				},
				{
					"name": "Update Medication Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated schedule data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('schedule');",
									"    pm.expect(jsonData.schedule.medicationName).to.eql(pm.environment.get('updatedMedicationName'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"medicationName\": \"{{updatedMedicationName}}\",\n    \"dosage\": \"{{updatedMedicationDosage}}\",\n    \"frequency\": \"{{updatedMedicationFrequency}}\",\n    \"times\": {{updatedMedicationTimes}},\n    \"instructions\": \"{{updatedMedicationInstructions}}\",\n    \"notes\": \"{{updatedMedicationNotes}}\",\n    \"isActive\": {{updatedScheduleIsActive}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/medication-schedules/{{scheduleId}}",
							"host": ["{{baseUrl}}"],
							"path": ["medication-schedules", "{{scheduleId}}"]
						}
					}
				},
				{
					"name": "Delete Medication Schedule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response confirms deletion\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData.message).to.include('deleted');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medication-schedules/{{scheduleId}}",
							"host": ["{{baseUrl}}"],
							"path": ["medication-schedules", "{{scheduleId}}"]
						}
					}
				}
			]
		},
		{
			"name": "Consumption Records",
			"item": [
				{
					"name": "Get All Consumption Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has records array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('records');",
									"    pm.expect(jsonData.records).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/consumption-records",
							"host": ["{{baseUrl}}"],
							"path": ["consumption-records"]
						}
					}
				},
				{
					"name": "Update Consumption Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated record data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('record');",
									"    pm.expect(jsonData.record.status).to.eql(pm.environment.get('consumptionStatus'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"{{consumptionStatus}}\",\n    \"notes\": \"{{consumptionNotes}}\",\n    \"sideEffectsReported\": {{consumptionSideEffects}},\n    \"actualTime\": \"{{consumptionActualTime}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/consumption-records/{{recordId}}",
							"host": ["{{baseUrl}}"],
							"path": ["consumption-records", "{{recordId}}"]
						}
					}
				},
				{
					"name": "Get Consumption Records by Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has patient records\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('records');",
									"    pm.expect(jsonData.records).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/consumption-records/patient/{{patientId}}",
							"host": ["{{baseUrl}}"],
							"path": ["consumption-records", "patient", "{{patientId}}"]
						}
					}
				},
				{
					"name": "Generate Consumption Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response confirms generation\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"    pm.expect(jsonData).to.have.property('recordsCreated');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/consumption-records/generate",
							"host": ["{{baseUrl}}"],
							"path": ["consumption-records", "generate"]
						}
					}
				}
			]
		},
		{
			"name": "Dashboard & Analytics",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has dashboard stats\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('stats');",
									"    pm.expect(jsonData.stats).to.have.property('totalPatients');",
									"    pm.expect(jsonData.stats).to.have.property('totalMedications');",
									"    pm.expect(jsonData.stats).to.have.property('complianceRate');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dashboard/stats",
							"host": ["{{baseUrl}}"],
							"path": ["dashboard", "stats"]
						}
					}
				},
				{
					"name": "Get Compliance Chart Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has chart data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('chartData');",
									"    pm.expect(jsonData.chartData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dashboard/compliance-chart?days={{chartDays}}",
							"host": ["{{baseUrl}}"],
							"path": ["dashboard", "compliance-chart"],
							"query": [
								{
									"key": "days",
									"value": "{{chartDays}}"
								}
							]
						}
					}
				},
				{
					"name": "Get Recent Activities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has activities array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('activities');",
									"    pm.expect(jsonData.activities).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dashboard/recent-activities?limit={{activityLimit}}",
							"host": ["{{baseUrl}}"],
							"path": ["dashboard", "recent-activities"],
							"query": [
								{
									"key": "limit",
									"value": "{{activityLimit}}"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Reports & Analytics",
			"item": [
				{
					"name": "Get Patient Compliance Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has compliance report\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('report');",
									"    pm.expect(jsonData.report).to.have.property('patientId');",
									"    pm.expect(jsonData.report).to.have.property('complianceRate');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reports/patient-compliance/{{patientId}}?startDate={{reportStartDate}}&endDate={{reportEndDate}}",
							"host": ["{{baseUrl}}"],
							"path": ["reports", "patient-compliance", "{{patientId}}"],
							"query": [
								{
									"key": "startDate",
									"value": "{{reportStartDate}}"
								},
								{
									"key": "endDate",
									"value": "{{reportEndDate}}"
								}
							]
						}
					}
				},
				{
					"name": "Get Medication Usage Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has medication report\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('report');",
									"    pm.expect(jsonData.report).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reports/medication-usage?startDate={{reportStartDate}}&endDate={{reportEndDate}}",
							"host": ["{{baseUrl}}"],
							"path": ["reports", "medication-usage"],
							"query": [
								{
									"key": "startDate",
									"value": "{{reportStartDate}}"
								},
								{
									"key": "endDate",
									"value": "{{reportEndDate}}"
								}
							]
						}
					}
				},
				{
					"name": "Export Compliance Report PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is PDF\", function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/pdf');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reports/export/compliance-pdf?patientId={{patientId}}&startDate={{reportStartDate}}&endDate={{reportEndDate}}",
							"host": ["{{baseUrl}}"],
							"path": ["reports", "export", "compliance-pdf"],
							"query": [
								{
									"key": "patientId",
									"value": "{{patientId}}"
								},
								{
									"key": "startDate",
									"value": "{{reportStartDate}}"
								},
								{
									"key": "endDate",
									"value": "{{reportEndDate}}"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Notifications & Webhooks",
			"item": [
				{
					"name": "Test Webhook Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Webhook received data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('received');",
									"    pm.expect(jsonData.received).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"action\": \"{{webhookAction}}\",\n    \"collection\": \"{{webhookCollection}}\",\n    \"documentId\": \"{{webhookDocumentId}}\",\n    \"data\": {\n        \"name\": \"Test Data\",\n        \"timestamp\": \"{{webhookTimestamp}}\"\n    },\n    \"userId\": \"{{userId}}\",\n    \"userRole\": \"{{userRole}}\",\n    \"userName\": \"{{userName}}\"\n}"
						},
						"url": {
							"raw": "{{webhookUrl}}",
							"host": ["{{webhookUrl}}"]
						}
					}
				},
				{
					"name": "Send Medication Reminder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notification sent successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('sent');",
									"    pm.expect(jsonData.sent).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientId\": \"{{patientId}}\",\n    \"medicationName\": \"{{medicationName}}\",\n    \"scheduledTime\": \"{{reminderTime}}\",\n    \"message\": \"{{reminderMessage}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/medication-reminder",
							"host": ["{{baseUrl}}"],
							"path": ["notifications", "medication-reminder"]
						}
					}
				}
			]
		},
		{
			"name": "Search & Filters",
			"item": [
				{
					"name": "Search Patients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has search results\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('patients');",
									"    pm.expect(jsonData.patients).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patients/search?q={{searchQuery}}&gender={{searchGender}}&doctorId={{searchDoctorId}}",
							"host": ["{{baseUrl}}"],
							"path": ["patients", "search"],
							"query": [
								{
									"key": "q",
									"value": "{{searchQuery}}"
								},
								{
									"key": "gender",
									"value": "{{searchGender}}"
								},
								{
									"key": "doctorId",
									"value": "{{searchDoctorId}}"
								}
							]
						}
					}
				},
				{
					"name": "Filter Consumption Records",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has filtered records\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('records');",
									"    pm.expect(jsonData.records).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/consumption-records/filter?status={{filterStatus}}&patientId={{filterPatientId}}&date={{filterDate}}&limit={{filterLimit}}",
							"host": ["{{baseUrl}}"],
							"path": ["consumption-records", "filter"],
							"query": [
								{
									"key": "status",
									"value": "{{filterStatus}}"
								},
								{
									"key": "patientId",
									"value": "{{filterPatientId}}"
								},
								{
									"key": "date",
									"value": "{{filterDate}}"
								},
								{
									"key": "limit",
									"value": "{{filterLimit}}"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "API Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"API is healthy\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status');",
									"    pm.expect(jsonData.status).to.eql('healthy');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": ["{{baseUrl}}"],
							"path": ["health"]
						}
					}
				},
				{
					"name": "Database Connection Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Database is connected\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('database');",
									"    pm.expect(jsonData.database).to.have.property('connected');",
									"    pm.expect(jsonData.database.connected).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/health/database",
							"host": ["{{baseUrl}}"],
							"path": ["health", "database"]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set current timestamp for webhook testing",
					"pm.environment.set('webhookTimestamp', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to check response time",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"key": "webhookUrl",
			"value": "https://n8n-jowjjemi.ap-southeast-1.clawcloudrun.com/webhook-test/15367c88-2160-46ad-8320-48b85b088858",
			"type": "string"
		}
	]
}